class Node{
int data;
Node next;
Node back;
Node(int data1,Node next1,Node back1){
this.data=data1;
this.next=next1;
this.back=back1;
}
Node(int data1){
this.data=data1;
this.next=null;
this.back=null;
}
};
public class DeleteDllk{
private static void print(Node head){
while(head!=null){
System.out.print(head.data+" ");
head=head.next;
}
}
private static Node convertdl(int[] arr){
Node head=new Node(arr[0]);
Node prev=head;
for(int i=1;i<arr.length;i++){
Node temp=new Node(arr[i],null,prev);
prev.next=temp;
prev=temp;
}
return head;
}
private static Node deletehead(Node head){
if(head==null||head.next==null){
return null;
}
Node prev=head;
head=head.next;
head.back=null;
prev.next=null;
return head;
}
private static Node deletetail(Node head){
if(head==null||head.next==null){
return null;}
Node tail=head;
while(tail.next!=null){
tail=tail.next;
}
Node prev=tail.back;
prev.next=null;
tail.back=null;
return head;
}
private static Node removek(Node head,int k){
if(head==null){
return null;}
int cnt=0;
Node knode=head;
while(knode!=null){
cnt++;
if(cnt==k) break;
knode=knode.next;
}
Node prev=knode.back;
Node front=knode.next;
if(prev==null&&front==null){
return null;}
else if(prev==null){
return deletehead(head);
}
else if(front==null){
return deletetail(head);
}
prev.next=front;
front.back=prev;
knode.next=null;
knode.back=null;
return head;
}
public static void main(String args[]){
int arr[]={1,2,3,4,8,9};
Node head=convertdl(arr);
Node head1=removek(head,2);
print(head1);
}}
